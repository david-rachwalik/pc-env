---
# Check servers: https://status.chocolatey.org
# https://docs.ansible.com/ansible/latest/modules/win_chocolatey_module.html

- block:
  - set_fact:
      chocolatey_packages_installed: "{{out_chocolatey_facts | json_query('ansible_facts.ansible_chocolatey.packages[*].package') | sort}}"

  - set_fact:
      chocolatey_packages_to_uninstall: "{{chocolatey_packages.uninstall | json_query('[*].name') | intersect(chocolatey_packages_installed) | sort}}"

  - name: Uninstall Chocolatey Package
    win_chocolatey:
      # name: "{{item.name}}"
      # package_params: "{{item.package_params | default(omit)}}"
      name: "{{item}}"
      state: absent
    # loop: "{{chocolatey_packages.uninstall | diff_package(chocolatey_packages_installed)}}" # would need obj intersect, not diff
    loop: "{{chocolatey_packages_to_uninstall}}"
    when: chocolatey_packages_to_uninstall | count > 0
    tags: [uninstall]


  - set_fact:
      chocolatey_packages_to_install: "{{chocolatey_packages.install | json_query('[*].name') | difference(chocolatey_packages_installed) | sort}}"

  - name: Install Chocolatey Package
    win_chocolatey:
      name: "{{item.name}}"
      package_params: "{{item.package_params | default(omit)}}"
      state: present
    loop: "{{chocolatey_packages.install | diff_package(chocolatey_packages_installed)}}" # loops objects, not only name
    when: chocolatey_packages_to_install | count > 0
    tags: [install]


  # Upgrade does not require 'package_params' after using: choco feature enable -n=useRememberedArgumentsForUpgrades
  - name: Upgrade Chocolatey packages
    win_chocolatey:
      name: all
      state: latest
    ignore_errors: true
    tags: [upgrade]

  tags: [windows, chocolatey, choco]
...